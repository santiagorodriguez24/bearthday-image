{"version":3,"sources":["store/action-types.js","store/reducers/NasaEpicReducer.js","store/reducers/GlobalReducer.js","store/root-reducer.js","store/store.js","config/DayJs/config-dayjs.js","routes/routes.js","api-interface/Api.js","api-interface/urls.js","store/action-creators/NasaEpicActions.js","components/AppLoader.js","components/ErrorMessageCard.js","components/PublicNavBar.js","components/PublicFooter.js","components/MainLayout.js","config/DayJs/time-date.js","routes/home/Home.js","routes/photo-gallery/PhotoGallery.js","routes/not-found/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["CHANGE_NASA_EPIC_PROPS","GET_NASA_EPIC_AVAILABLE_DATES","GET_NASA_EPIC_IMAGES_DATA_BY_DATE","updateState","state","newProps","Object","assign","nasaEpic","handleActions","action","payload","error","availableDates","imagesByDateData","userBirthDay","imagesDate","global","newState","fontsLoaded","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","promiseMiddleware","dayjs","extend","advancedFormat","customParseFormat","duration","isBetween","isoWeek","isSameOrAfter","isSameOrBefore","minMax","objectSupport","utc","weekDay","weekOfYear","timezone","baseUrl","process","ROUTE_HOME","ROUTE_PHOTO_GALLERY","apiGet","url","Promise","resolve","reject","axios","get","params","api_key","headers","Accept","timeout","withCredentials","then","response","has","data","catch","message","config","method","errorMessage","url_nasa_epic_api","urlApiNaturalColor","changeNasaProps","createAction","props","getAvailableDates","getDataByDate","date","AppLoader","size","className","locales","page","ErrorCardMessage","removeErrorAction","showBackButton","backRoute","backPageName","history","useHistory","handleBack","useCallback","push","xs","src","alt","sm","md","color","onClick","document","location","reload","style","marginRight","PublicNavBar","expand","PublicFooter","lg","to","pathname","target","rel","MainLayout","children","DATE_FORMATS","Home","dispatch","useDispatch","useState","selectedDate","setSelectedDate","inputError","setInputError","dataLoaded","setDataLoaded","nasaEpicavailableDatesStore","useSelector","nasaEpicErrorStore","useEffect","result","handleOnChangeDate","event","value","validateValue","handleSearchImages","actualDate","birthday","actualYear","year","actualMonth","month","actualDay","birthdayMonth","birthdayDay","searchYear","searchMonth","format","searchDay","searchDateString","finalSearchDate","includes","searchDate","daysToAdd","dateToFind","add","console","log","ErrorCard","useMemo","ErrorMessageCard","isPublicPage","for","id","placeholder","type","invalid","onChange","onBlur","disabled","urlArchiveNaturalColor","PhotoGallery","nasaEpicImagesByDateDataStore","userBirthDayStore","imagesDateStore","images","length","carouselItems","map","element","index","caption","image","imageDate","imageYear","imageMonth","imageDay","autoPlay","infiniteLoop","tag","Link","NotFound","App","exact","path","routes","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b5ef8fd.chunk.js","sourcesContent":["// global\r\nexport const CHANGE_GLOBAL_PROPS = 'CHANGE_GLOBAL_PROPS';\r\n\r\n// NASA EPIC\r\nexport const CHANGE_NASA_EPIC_PROPS = 'CHANGE_NASA_EPIC_PROPS';\r\nexport const GET_NASA_EPIC_AVAILABLE_DATES = 'GET_NASA_EPIC_AVAILABLE_DATES';\r\nexport const GET_NASA_EPIC_IMAGES_DATA_BY_DATE =\r\n  'GET_NASA_EPIC_IMAGES_DATA_BY_DATE';\r\n","import { handleActions } from 'redux-actions';\r\nimport {\r\n  CHANGE_NASA_EPIC_PROPS,\r\n  GET_NASA_EPIC_AVAILABLE_DATES,\r\n  GET_NASA_EPIC_IMAGES_DATA_BY_DATE,\r\n} from 'store/action-types';\r\n\r\nconst initialState = {\r\n  availableDates: [],\r\n  error: '',\r\n  imagesByDateData: [],\r\n  userBirthDay: '',\r\n  imagesDate: '',\r\n};\r\n\r\nfunction updateState(state, newProps) {\r\n  let newState = Object.assign({}, state, newProps);\r\n  return newState;\r\n}\r\n\r\nexport const nasaEpic = handleActions(\r\n  {\r\n    [CHANGE_NASA_EPIC_PROPS]: (state, action) => {\r\n      let newState = updateState(state, action.payload);\r\n      return newState;\r\n    },\r\n\r\n    [GET_NASA_EPIC_AVAILABLE_DATES]: (state, action) => {\r\n      if (action.error) {\r\n        const newState = updateState(state, {\r\n          error: action.payload.error,\r\n        });\r\n\r\n        return newState;\r\n      }\r\n\r\n      const availableDates = action.payload;\r\n\r\n      const newState = updateState(state, {\r\n        availableDates,\r\n        error: '',\r\n      });\r\n\r\n      return newState;\r\n    },\r\n\r\n    [GET_NASA_EPIC_IMAGES_DATA_BY_DATE]: (state, action) => {\r\n      if (action.error) {\r\n        const newState = updateState(state, {\r\n          error: action.payload.error,\r\n        });\r\n\r\n        return newState;\r\n      }\r\n\r\n      const imagesByDateData = action.payload;\r\n\r\n      const newState = updateState(state, {\r\n        imagesByDateData,\r\n        error: '',\r\n      });\r\n\r\n      return newState;\r\n    },\r\n  },\r\n  initialState,\r\n);\r\n","import { CHANGE_GLOBAL_PROPS } from '../action-types';\r\nimport { handleActions } from 'redux-actions';\r\n\r\nconst initialState = {\r\n    fontsLoaded: false\r\n};\r\n\r\nfunction updateState(state, newProps) {\r\n    let newState = Object.assign({}, state, newProps);\r\n    return newState;\r\n}\r\n\r\nconst global = handleActions(\r\n    {\r\n        [CHANGE_GLOBAL_PROPS]: (state, action) => {\r\n            let newState = updateState(state, action.payload);\r\n            return newState;\r\n        }\r\n\r\n    },\r\n    initialState\r\n);\r\n\r\nexport default global;","import { combineReducers } from 'redux';\r\nimport { nasaEpic } from './reducers/NasaEpicReducer';\r\nimport global from './reducers/GlobalReducer';\r\n\r\nexport default combineReducers({\r\n  global,\r\n  nasaEpic,\r\n});\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport rootReducer from './root-reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    {},\r\n    composeEnhancers(\r\n        applyMiddleware(promiseMiddleware)\r\n    )\r\n);\r\n\r\nexport default store;","import dayjs from 'dayjs';\r\nimport advancedFormat from 'dayjs/plugin/advancedFormat';\r\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\r\nimport duration from 'dayjs/plugin/duration';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\nimport isoWeek from 'dayjs/plugin/isoWeek';\r\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\r\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport objectSupport from 'dayjs/plugin/objectSupport';\r\nimport utc from 'dayjs/plugin/utc';\r\nimport weekDay from 'dayjs/plugin/weekday';\r\nimport weekOfYear from 'dayjs/plugin/weekOfYear';\r\nimport timezone from 'dayjs/plugin/timezone';\r\nimport 'dayjs/locale/en-gb';\r\n\r\ndayjs.extend(advancedFormat);\r\ndayjs.extend(customParseFormat);\r\ndayjs.extend(duration);\r\ndayjs.extend(isBetween);\r\ndayjs.extend(isoWeek);\r\ndayjs.extend(isSameOrAfter);\r\ndayjs.extend(isSameOrBefore);\r\ndayjs.extend(minMax);\r\ndayjs.extend(objectSupport);\r\ndayjs.extend(utc);\r\ndayjs.extend(weekDay);\r\ndayjs.extend(weekOfYear);\r\ndayjs.extend(timezone);\r\n","const baseUrl = process.env.PUBLIC_URL;\r\n\r\nexport const ROUTE_HOME = `${baseUrl}/`;\r\nexport const ROUTE_PHOTO_GALLERY = `${baseUrl}/photo-gallery`;\r\n","import axios from 'axios';\r\nimport { has } from 'lodash';\r\n\r\nlet api_key = process.env.REACT_APP_NASA_API_KEY;\r\n\r\nexport const apiGet = (url) => new Promise((resolve, reject) => {\r\n    axios\r\n      .get(url, {\r\n        params: {\r\n          api_key: api_key,\r\n        },\r\n        headers: {\r\n          Accept: 'application/json',\r\n        },\r\n        timeout: 10000,\r\n        withCredentials: false,\r\n      })\r\n      .then(function (response) {\r\n        if (!has(response, 'data')) {\r\n          // axios allways has data... some big error here...\r\n          reject(response);\r\n        }\r\n\r\n        if (has(response.data, 'error')) {\r\n          // server response with an error\r\n          reject(response.data.error);\r\n        }\r\n\r\n        resolve(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        if (error.message) {\r\n          reject(error.message);\r\n        }\r\n\r\n        if (error.config) {\r\n          const { method, url } = error.config;\r\n          const errorMessage = `Request ${method}: ${url} failed.`;\r\n          reject(errorMessage);\r\n        }\r\n\r\n        reject('Something went wrong.');\r\n      });\r\n  });\r\n","// export const url_server = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\nexport const url_server = '';\r\nexport const url_nasa_epic_api = 'https://api.nasa.gov/EPIC';","import { createAction } from 'redux-actions';\r\n\r\nimport {\r\n  CHANGE_NASA_EPIC_PROPS,\r\n  GET_NASA_EPIC_AVAILABLE_DATES,\r\n  GET_NASA_EPIC_IMAGES_DATA_BY_DATE,\r\n} from 'store/action-types';\r\nimport { apiGet } from 'api-interface/Api';\r\nimport { url_nasa_epic_api } from 'api-interface/urls';\r\n\r\nconst urlApiNaturalColor = `${url_nasa_epic_api}/api/natural`;\r\n\r\nexport const changeNasaProps = createAction(\r\n  CHANGE_NASA_EPIC_PROPS,\r\n  (props) => props,\r\n);\r\n\r\nexport const getAvailableDates = createAction(\r\n  GET_NASA_EPIC_AVAILABLE_DATES,\r\n  () => apiGet(`${urlApiNaturalColor}/available`),\r\n);\r\n\r\nexport const getDataByDate = createAction(\r\n  GET_NASA_EPIC_IMAGES_DATA_BY_DATE,\r\n  (date) => apiGet(`${urlApiNaturalColor}/date/${date}`),\r\n);\r\n","import React from 'react';\r\nimport { IoEarth } from 'react-icons/io5';\r\n\r\nconst AppLoader = (props) => {\r\n  const { size = 65 } = props;\r\n  return (\r\n    <div className=\"app-loader-container\">\r\n      <div className=\"app-loader\">\r\n        <IoEarth size={size} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppLoader;\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaHome } from 'react-icons/fa';\r\nimport { IoReloadOutline } from 'react-icons/io5';\r\n\r\nconst locales = {\r\n  card_error_title: 'Something went wrong.',\r\n  reload: 'Reload page',\r\n  goBackPage: (page) => `Go to ${page}`,\r\n};\r\n\r\nconst ErrorCardMessage = (props) => {\r\n  const {\r\n    errorMessage,\r\n    removeErrorAction,\r\n    showBackButton = true,\r\n    backRoute,\r\n    backPageName,\r\n  } = props;\r\n  const history = useHistory();\r\n\r\n  const handleBack = useCallback(() => {\r\n    history.push(backRoute);\r\n    removeErrorAction({ error: '' });\r\n  }, [backRoute, history, removeErrorAction]);\r\n\r\n  return (\r\n    <Card className=\"error-message-card\">\r\n      <CardHeader>{locales.card_error_title}</CardHeader>\r\n      <CardBody>\r\n        <Row className=\"basic-row\">\r\n          <Col xs={4}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/images/nasa-logo.svg'}\r\n              alt=\"Nasa logo\"\r\n              className=\"error-message-card-img\"\r\n            />\r\n          </Col>\r\n          <Col xs={8}>\r\n            <p className=\"error-message-card-text\"> {errorMessage}</p>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n      <CardFooter>\r\n        <Col\r\n          xs={12}\r\n          sm={12}\r\n          md={showBackButton ? 6 : 12}\r\n          className=\"error-message-card-button-container\"\r\n        >\r\n          <Button\r\n            color=\"\"\r\n            className=\"error-message-card-button yellow\"\r\n            size=\"lg\"\r\n            onClick={() => document.location.reload()}\r\n          >\r\n            <IoReloadOutline style={{ marginRight: '15px' }} />\r\n            {locales.reload}\r\n          </Button>\r\n        </Col>\r\n        {showBackButton && (\r\n          <Col\r\n            xs={12}\r\n            sm={12}\r\n            md={6}\r\n            className=\"error-message-card-button-container\"\r\n          >\r\n            <Button\r\n              color=\"\"\r\n              className=\"error-message-card-button yellow\"\r\n              size=\"lg\"\r\n              onClick={handleBack}\r\n            >\r\n              <FaHome style={{ marginRight: '15px' }} />\r\n              {locales.goBackPage(backPageName)}\r\n            </Button>\r\n          </Col>\r\n        )}\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ErrorCardMessage;\r\n","import React from 'react';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ROUTE_HOME } from 'routes/routes';\r\n\r\nconst PublicNavBar = () => {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <Navbar className=\"navbar-app\" expand=\"md\">\r\n        <NavbarBrand>\r\n          <img\r\n            src={process.env.PUBLIC_URL + '/images/nasa-logo.svg'}\r\n            alt=\"PL Logo\"\r\n            className=\"navbar-logo link\"\r\n            onClick={() => history.push(ROUTE_HOME)}\r\n          />\r\n        </NavbarBrand>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PublicNavBar;\r\n","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  FaFacebookF,\r\n  FaInstagram,\r\n  FaTwitter,\r\n  FaYoutube,\r\n  FaLinkedin,\r\n} from 'react-icons/fa';\r\n\r\nconst locales = {\r\n  copyright:\r\n    '© Copyright National Aeronautics and Space Administration. All rights reserved.',\r\n};\r\n\r\nconst PublicFooter = () => {\r\n  return (\r\n    <div className=\"public-footer\">\r\n      <Col lg={3} className=\"footer-col links\"></Col>\r\n      <Col lg={6} className=\"footer-col\">\r\n        <span className=\"legal-text\">{locales.copyright}</span>\r\n      </Col>\r\n      <Col lg={3} className=\"footer-col\">\r\n        <Row className=\"footer-icons-row\">\r\n          <div className=\"footer-icon-container\">\r\n            <Link\r\n              to={{\r\n                pathname: 'https://www.facebook.com/NASA/',\r\n              }}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FaFacebookF className=\"footer-icon\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"footer-icon-container\">\r\n            <Link\r\n              to={{\r\n                pathname: 'http://instagram.com/nasa',\r\n              }}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FaInstagram className=\"footer-icon\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"footer-icon-container\">\r\n            <Link\r\n              to={{\r\n                pathname: 'http://twitter.com/nasa',\r\n              }}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FaTwitter className=\"footer-icon\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"footer-icon-container\">\r\n            <Link\r\n              to={{\r\n                pathname: 'https://www.youtube.com/NASA',\r\n              }}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FaYoutube className=\"footer-icon\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"footer-icon-container\">\r\n            <Link\r\n              to={{\r\n                pathname: 'https://www.linkedin.com/company/nasa/',\r\n              }}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FaLinkedin className=\"footer-icon\" />\r\n            </Link>\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PublicFooter;\r\n","import React from 'react';\r\nimport PublicNavBar from 'components/PublicNavBar';\r\nimport PublicFooter from 'components/PublicFooter';\r\n\r\nconst MainLayout = (props) => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <div className=\"main-layout\">\r\n      <PublicNavBar />\r\n      <div className=\"main-layout-content\">\r\n        {children}\r\n      </div>\r\n      <PublicFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","export const DATE_FORMATS = {\r\n  DAY_NAME_TWO_DIGITS: 'DD',\r\n  MONTH_NAME_TWO_DIGITS: 'MM',\r\n  YEAR_FOUR_DIGIT_MONTH_DAY_PADDED: 'YYYY-MM-DD',\r\n  YEAR_FOUR_DIGIT: 'YYYY',\r\n};\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport dayjs from 'dayjs';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {\r\n  Button,\r\n  Container,\r\n  FormFeedback,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n} from 'reactstrap';\r\n\r\nimport { FaPhotoVideo } from 'react-icons/fa';\r\n\r\nimport {\r\n  changeNasaProps,\r\n  getAvailableDates,\r\n  getDataByDate,\r\n} from 'store/action-creators/NasaEpicActions';\r\n\r\nimport AppLoader from 'components/AppLoader';\r\nimport ErrorMessageCard from 'components/ErrorMessageCard';\r\nimport MainLayout from 'components/MainLayout';\r\n\r\nimport { DATE_FORMATS } from 'config/DayJs/time-date';\r\n\r\nimport { ROUTE_PHOTO_GALLERY } from 'routes/routes';\r\n\r\nconst locales = {\r\n  searchImagesButtonLabel: 'Search Images',\r\n  page_title: 'Bearthday image',\r\n  description:\r\n    'Your birthday is so special NASA might have taken a photo of you on it! well ok they took a photo of the earth... you may be in it... somewhere.',\r\n  instructions:\r\n    'Select your date of birth and let us show you photos of the earth from the day of your last birthday.',\r\n};\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [inputError, setInputError] = useState('');\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const nasaEpicavailableDatesStore = useSelector(\r\n    (store) => store.nasaEpic.availableDates,\r\n  );\r\n\r\n  const nasaEpicErrorStore = useSelector((store) => store.nasaEpic.error);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAvailableDates())\r\n      .then((result) => {\r\n        setDataLoaded(true);\r\n      })\r\n      .catch((error) => {\r\n        setDataLoaded(true);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  const handleOnChangeDate = useCallback((event) => {\r\n    setSelectedDate(event.target.value);\r\n    setInputError('');\r\n  }, []);\r\n\r\n  const validateValue = useCallback(() => {\r\n    if (!selectedDate) {\r\n      setInputError('Date of birth is required.');\r\n    }\r\n  }, [selectedDate]);\r\n\r\n  const handleSearchImages = useCallback(() => {\r\n    if (selectedDate) {\r\n      const actualDate = dayjs();\r\n      const birthday = dayjs(\r\n        selectedDate,\r\n        DATE_FORMATS.YEAR_FOUR_DIGIT_MONTH_DAY_PADDED,\r\n      );\r\n\r\n      const actualYear = actualDate.year();\r\n      const actualMonth = actualDate.month();\r\n      const actualDay = actualDate.date();\r\n      const birthdayMonth = birthday.month();\r\n      const birthdayDay = birthday.date();\r\n\r\n      const birthdayAlreadyPassed =\r\n        actualMonth > birthdayMonth\r\n          ? true\r\n          : actualMonth === birthdayMonth\r\n          ? actualDay > birthdayDay\r\n          : false;\r\n\r\n      const searchYear = birthdayAlreadyPassed ? actualYear : actualYear - 1;\r\n      const searchMonth = birthday.format(DATE_FORMATS.MONTH_NAME_TWO_DIGITS);\r\n      const searchDay = birthday.format(DATE_FORMATS.DAY_NAME_TWO_DIGITS);\r\n\r\n      const searchDateString = `${searchYear}-${searchMonth}-${searchDay}`;\r\n      let finalSearchDate = '';\r\n\r\n      if (nasaEpicavailableDatesStore) {\r\n        const lastBirthdayImageAvailable =\r\n          nasaEpicavailableDatesStore.includes(searchDateString);\r\n\r\n        if (lastBirthdayImageAvailable) {\r\n          finalSearchDate = searchDateString;\r\n        } else {\r\n          const searchDate = dayjs(\r\n            searchDateString,\r\n            DATE_FORMATS.YEAR_FOUR_DIGIT_MONTH_DAY_PADDED,\r\n          );\r\n\r\n          let daysToAdd = 1;\r\n\r\n          while (!finalSearchDate) {\r\n            const dateToFind = searchDate\r\n              .add(daysToAdd, 'day')\r\n              .format(DATE_FORMATS.YEAR_FOUR_DIGIT_MONTH_DAY_PADDED);\r\n\r\n            const dateIsAvailable =\r\n              nasaEpicavailableDatesStore.includes(dateToFind);\r\n\r\n            if (dateIsAvailable) {\r\n              finalSearchDate = dateToFind;\r\n            }\r\n\r\n            daysToAdd++;\r\n          }\r\n        }\r\n      }\r\n\r\n      setDataLoaded(false);\r\n\r\n      dispatch(\r\n        changeNasaProps({\r\n          userBirthDay: selectedDate,\r\n          imagesDate: finalSearchDate,\r\n        }),\r\n      );\r\n\r\n      dispatch(getDataByDate(finalSearchDate))\r\n        .then((result) => {\r\n          history.push(ROUTE_PHOTO_GALLERY);\r\n          setDataLoaded(true);\r\n        })\r\n        .catch((error) => {\r\n          setDataLoaded(true);\r\n          console.log('Component error: ', error);\r\n        });\r\n    }\r\n  }, [dispatch, history, nasaEpicavailableDatesStore, selectedDate]);\r\n\r\n  const ErrorCard = useMemo(() => {\r\n    if (nasaEpicErrorStore !== '') {\r\n      return (\r\n        <ErrorMessageCard\r\n          errorMessage={nasaEpicErrorStore}\r\n          removeErrorAction={changeNasaProps}\r\n          showBackButton={false}\r\n        />\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }, [nasaEpicErrorStore]);\r\n\r\n  return (\r\n    <MainLayout isPublicPage={false}>\r\n      <Container>\r\n        <div className=\"page-title\">{locales.page_title}</div>\r\n        <Row className=\"home-description\">\r\n          <p>{locales.description}</p>\r\n        </Row>\r\n        <Row className=\"home-description\">\r\n          <p>{locales.instructions}</p>\r\n        </Row>\r\n        {dataLoaded ? (\r\n          <div className=\"form-container\">\r\n            <FormGroup className=\"app-input-container\">\r\n              <Label className=\"app-input-label\" for={'birthday-input'}>\r\n                {'Date of birth'}\r\n              </Label>\r\n              <Input\r\n                id={'birthday-input'}\r\n                placeholder=\"&#xf1fd;;   Birthday\"\r\n                type=\"date\"\r\n                invalid={!!inputError}\r\n                className=\"app-input\"\r\n                onChange={handleOnChangeDate}\r\n                onBlur={validateValue}\r\n                value={selectedDate}\r\n              />\r\n              {!!inputError && (\r\n                <FormFeedback className=\"app-formfeedback\">\r\n                  {inputError}\r\n                </FormFeedback>\r\n              )}\r\n            </FormGroup>\r\n            <Row className=\"home-button-container\">\r\n              <Button\r\n                color=\"\"\r\n                className=\"app-button\"\r\n                size=\"lg\"\r\n                disabled={!!inputError || !selectedDate}\r\n                onClick={handleSearchImages}\r\n              >\r\n                <FaPhotoVideo size={20} style={{ marginRight: '15px' }} />\r\n                {locales.searchImagesButtonLabel}\r\n              </Button>\r\n            </Row>\r\n            <Row className=\"home-button-container\">{ErrorCard}</Row>\r\n          </div>\r\n        ) : (\r\n          <AppLoader />\r\n        )}\r\n      </Container>\r\n    </MainLayout>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { FaHome } from 'react-icons/fa';\r\nimport { Row, Container, Button } from 'reactstrap';\r\n\r\nimport { url_nasa_epic_api } from 'api-interface/urls';\r\n\r\nimport { changeNasaProps } from 'store/action-creators/NasaEpicActions';\r\nimport MainLayout from 'components/MainLayout';\r\nimport ErrorMessageCard from 'components/ErrorMessageCard';\r\nimport { DATE_FORMATS } from 'config/DayJs/time-date';\r\n\r\nimport { ROUTE_HOME } from 'routes/routes';\r\n\r\nconst urlArchiveNaturalColor = `${url_nasa_epic_api}/archive/natural`;\r\nlet api_key = process.env.REACT_APP_NASA_API_KEY;\r\n\r\nconst locales = {\r\n  backButtonLabel: 'Go to Home',\r\n  page_title: 'Photo Gallery',\r\n  getDescription: (birthday, imagesDate) => {\r\n    if (birthday === imagesDate) {\r\n      return `This are the photos of the earth on your last birthday!`;\r\n    } else {\r\n      return `Sadly, NASA doesn’t take photos every day and they didn’t take a picture of the earth on your last birthday, so the next images are from the closest date after: (${imagesDate}).`;\r\n    }\r\n  },\r\n  emptyState:\r\n    'Go back to Home screen and select a date to see the photos of the earth on that day.',\r\n};\r\n\r\nfunction PhotoGallery() {\r\n  const nasaEpicImagesByDateDataStore = useSelector(\r\n    (store) => store.nasaEpic.imagesByDateData,\r\n  );\r\n\r\n  const userBirthDayStore = useSelector((store) => store.nasaEpic.userBirthDay);\r\n\r\n  const imagesDateStore = useSelector((store) => store.nasaEpic.imagesDate);\r\n\r\n  const nasaEpicErrorStore = useSelector((store) => store.nasaEpic.error);\r\n\r\n  const images = useMemo(() => {\r\n    if (nasaEpicErrorStore !== '') {\r\n      return (\r\n        <ErrorMessageCard\r\n          errorMessage={nasaEpicErrorStore}\r\n          removeErrorAction={changeNasaProps}\r\n          showBackButton\r\n          backPageName={'Home'}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (nasaEpicImagesByDateDataStore.length) {\r\n      const carouselItems = nasaEpicImagesByDateDataStore.map(\r\n        (element, index) => {\r\n          const { caption, image, date } = element;\r\n\r\n          const imageDate = dayjs(date);\r\n\r\n          const imageYear = imageDate.format(DATE_FORMATS.YEAR_FOUR_DIGIT);\r\n          const imageMonth = imageDate.format(\r\n            DATE_FORMATS.MONTH_NAME_TWO_DIGITS,\r\n          );\r\n          const imageDay = imageDate.format(DATE_FORMATS.DAY_NAME_TWO_DIGITS);\r\n          const src = `${urlArchiveNaturalColor}/${imageYear}/${imageMonth}/${imageDay}/png/${image}.png?api_key=${api_key}`;\r\n\r\n          return (\r\n            <div key={`carousel-item-${index}`}>\r\n              <img src={src} alt={caption} />\r\n              <p className=\"legend\">{caption}</p>\r\n            </div>\r\n          );\r\n        },\r\n      );\r\n\r\n      return (\r\n        <Carousel autoPlay infiniteLoop>\r\n          {carouselItems}\r\n        </Carousel>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Row className=\"photo-gallery-description empty\">\r\n          <p>{locales.emptyState}</p>\r\n        </Row>\r\n        <Row className=\"basic-row\">\r\n          <Button\r\n            color=\"\"\r\n            className=\"app-button purple\"\r\n            size=\"lg\"\r\n            tag={Link}\r\n            to={ROUTE_HOME}\r\n          >\r\n            <FaHome style={{ marginRight: '15px' }} />\r\n            {locales.backButtonLabel}\r\n          </Button>\r\n        </Row>\r\n      </>\r\n    );\r\n  }, [nasaEpicErrorStore, nasaEpicImagesByDateDataStore]);\r\n\r\n  return (\r\n    <MainLayout isPublicPage={false}>\r\n      <Container>\r\n        <div className=\"page-title\">{locales.page_title}</div>\r\n        {imagesDateStore && userBirthDayStore ? (\r\n          <Row className=\"photo-gallery-description\">\r\n            <p>{locales.getDescription(userBirthDayStore, imagesDateStore)}</p>\r\n          </Row>\r\n        ) : null}\r\n        <Row className=\"basic-row\">{images}</Row>\r\n      </Container>\r\n    </MainLayout>\r\n  );\r\n}\r\n\r\nexport default PhotoGallery;\r\n","import React from 'react';\r\nimport { ROUTE_HOME } from 'routes/routes';\r\nimport { Button, Row, Container } from 'reactstrap';\r\nimport { IoHome } from 'react-icons/io5';\r\nimport MainLayout from 'components/MainLayout';\r\n\r\nconst locales = {\r\n  backButtonLabel: 'Go to Home',\r\n  not_found_message: 'The page you are looking for is not available.',\r\n};\r\n\r\nconst NotFound = (props) => {\r\n  const goToStart = () => {\r\n    props.history.push(ROUTE_HOME);\r\n  };\r\n\r\n  return (\r\n    <MainLayout isPublicPage={false}>\r\n      <Container>\r\n        <div className=\"not-found\">\r\n          <Row className=\"not-found-message\">\r\n            <p>{locales.not_found_message}</p>\r\n          </Row>\r\n          <Row className=\"not-found-row\">\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/images/not-found.jpg'}\r\n              alt=\"Not Found Img\"\r\n              className=\"not-found-img\"\r\n            />\r\n          </Row>\r\n          <Row className=\"not-found-button-container\">\r\n            <Button\r\n              color=\"\"\r\n              className=\"app-button purple\"\r\n              size=\"lg\"\r\n              onClick={goToStart}\r\n            >\r\n              <IoHome style={{ marginRight: '15px' }} />\r\n              {locales.backButtonLabel}\r\n            </Button>\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import 'config/DayJs/config-dayjs';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './styles/app.scss';\nimport * as routes from 'routes/routes';\n\nimport Home from 'routes/home/Home';\nimport PhotoGallery from 'routes/photo-gallery/PhotoGallery';\nimport NotFoundPage from 'routes/not-found/NotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={routes.ROUTE_HOME} component={Home} />\n        <Route\n          exact\n          path={routes.ROUTE_PHOTO_GALLERY}\n          component={PhotoGallery}\n        />\n         <Route render={(props) => <NotFoundPage {...props} />} /> \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { store } from \"store/store\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}